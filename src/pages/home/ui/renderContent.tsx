import { type FC } from 'react';
import { InfoMessage, LoadingSkeleton } from '../../../components';
import type { AdvertItems } from '../../../shared/types/advertisement.type';
import { ListAd } from '../../../widgets';

/**
 * –°–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ RenderContent
 * @property {boolean} loading - –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
 * @property {AdvertItems[]} allItems - –°–ø–∏—Å–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
 */
interface RenderContentProps {
  loading: boolean;
  allItems: AdvertItems[];
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç RenderContent –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π, —Å–∫–µ–ª–µ—Ç–æ–Ω –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
 * @param {RenderContentProps} props - –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @returns {JSX.Element} –°–ø–∏—Å–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π, —Å–∫–µ–ª–µ—Ç–æ–Ω –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
 */
export const RenderContent: FC<RenderContentProps> = ({ loading, allItems }) => {
  if (loading) {
    return <LoadingSkeleton />;
  }
  if (allItems.length > 0) {
    return <ListAd data={allItems} />;
  }
  return <InfoMessage message="–¢–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç ü´©" />;
};
